WEB PAGES
+--Home
|
|--Sign in (page)
|
+--Profiles (Sellers)
|		|
|		|--Sign up page (This will populate the Users table)
|		|--Profile page template (Automatically fills with client's details including inventory)
|		|		|
|		|		|--As seen by owner (With Edit Option)
|		|		+--As seen by buyer
|		|		
|		+--Profile Images Directory (dir)
|		
|
+--Agriculture (dir+index) [A]
|		|
|		+--Crops(dir+index) [C]
|		|		|
|		|		+--Food Crops (dir+index) [F]
|		|		|		|
|		|		|		+--Starchy Food Crops [ACFS]
|		|		|		|		|
|		|		|		|		|--Bananas/Matooke 
|		|		|		|		|--Cassava 
|		|		|		|		|--Rice 
|		|		|		|		|--Sweet Potatoes 
|		|		|		|		+--Irish Potatoes 
|		|		|		|		
|		|		|		+--Fruits (dir+index)[ACFF]
|		|		|		|		|
|		|		|		|		|--Yellow Bananas 
|		|		|		|		|--passion Fruits 
|		|		|		|		|--Avocadoes	
|		|		|		|		|--Tomatoes 
|		|		|		|		|--Egg plant 
|		|		|		|		|--Plantain/Gonja 
|		|		|		|		|--Green pepper 
|		|		|		|		+--Mangoes 
|		|		|		|		
|		|		|		+--Vegetables (dir+index)  [ACFV]
|		|		|		|		|
|		|		|		|		|--Cabbage 
|		|		|		|		|--Dodo/Amaranthus
|		|		|		|		|--Nakati 
|		|		|		|		|--Sukuma Wiki 
|		|		|		|		+--Lettuce 
|		|		|		|		
|		|		|		+--Legumes (dir+index) [ACFL]
|		|		|				|
|		|		|				|--Beans 
|		|		|				|--Ground nuts 
|		|		|				|--Peas 
|		|		|				|--Lentils 
|		|		|				+--Soy beans 
|		|		|		
|		|		+--Cash Crops (index page) [AC]
|		|				|
|		|		 		|--Tea 
|		|		 		|--Coffee 
|		|		 		+--Cotton 
|		|
|		+--Animals (dir+index) [AA]
|		|		|
|		|		|--Cows
|		|		|--Goats 
|		|		+--Sheep
|		|		
|		+--Poultry (index+dir) [AP]
|		|		|
|		|		|--Chicken
|		|		|--Ducks
|		|		+--Turkeys
|		|		
|		+--Fish(dir+index) [AF]
|				|
|				|--Tilapia
|				|--Cat Fish
|				|--Mud Fish 
|				+--Nile Perch 
|						
|
|--About Us (page)
|
+--Contact Us (page)

************************************CLIENT INFO***********************************

--UserID VARCHAR(PHP uniqid(U)) PRIMARY KEY
--Password [How to store?] PASSWORD();
--Date joined DATE
--First Name CHAR(20)
--Middle Name CHAR(20)
--Last Name	CHAR(20)
--Sex CHAR(M, F OR C for Company)
--Dob			DATE
--Company name VARCHAR (100)
--Email addresses VARCHAR (50)
--Address VARCHAR (140)
--District (Head offices) CHAR(50)
--Website VARCHAR(30)
--Phone number INT(11) NOT NULL
--Individual? Company? //Use this to MYSQL CHECK() the relative values.


**************************************DATABASE ITEMS****************************************
--ItemID VARCHAR(PHP uniqid(U)) PRIMARY KEY
--Name (select from category) VARCHAR (50)
--Category (For example, ACFV means the item is in Agriculture->Crops->Food Crops->Vegetables. Refer to hierarchy above for assignment guide)
--Description VARCHAR(140)
--ImageURL VARCHAR(50)


*************************************TABLE REPOSITORY***********************************************
--UserID FOREIGN KEY REFERENCES ClientInfo.UserID
--ItemID FOREIGN KEY REFERENCES Product.ItemID
--Quantity INT NOT NULL
--Units CHAR(10)
--UnitPrice INT (Shillings will be assumed, unless otherwise specified)
--State (Fresh/Dried/Other[Describe]) CHAR(50)
--Date added DATE()
--Available until	DATE 
--Deliverable areas (if deliverable) VARCHAR (256)


NEW IDEAS
--A rating system for sellers from buyers with whom at least one transaction has occurred
--Add response time of sellers
--There should be sorting of items by (price, Quantity, Popularity of seller)
--New boolean column in Users table to specify whether info is private 

REQUIRED
--A separate tables for each farmer for each item. It should have the following (Comments)
	|--ItemID. Identifies the particular table.
	|--Quantity available. Link to prompt update.
	|--ID (Unique item ID according to hierarchy.
	|--Comments on the item
	|--Number of orders for the item
	|--(If there's enough stock to satisfy the orders)

--A separate table for each farmer (Notifications)
		|--Number of notifications


#Pages to populate the tables. A page for each table
#The page for the Items table is only accessible to administrators
#

WHAT DOES THE CLIENT WANNA SEE WHEN THEY LOG IN
--Search by 
	-category
	-Location
	-Item name
	-Seller's name
	
--Items in the rows should be animated to scroll right-left automatically

	LOGGED IN
--Add a tab for the profile
--A tab for the repository
--List of items in repository
--Number of orders against each item
--The ORDER DETAILS should include
		|--Quantity
		|--Delivery address
		|--Phone number/email of whoever places the order

PLACING AN ORDER
--There'll be a "PLACE ORDER" button that brings up a dialogue box that requests
	the details of the order (phone no., Quantity, adress)



SCENARIOS (EVENTS)
	|
	|--Registered Client
	|		|
	|		|--Update profile item (php/sql script)
	|		|--Check inventory
	|		|		|
	|		|		|--Update inventory item description/quantity
	|		|		+--Add/remove inventory item
	|		|
	|		+--Check notifications
	|		
	+--New User
			|
			|--Search for an item (php ???)
			|--Check the seller's profile (profile without private info)
			|--Check the item's details
			+--Place an order
					|--Specify the quantity
					|--Specify the phone number
					|--Specify address
					|--Leave a comment
					+--Get order ID as a result

Functionality goals for fmh.php
-Add funcion to probe the database for available items and display some of them to the user - CHECK
-Set the funciton to run as soon as the website loads
-Write shell script or php to access the database and update the urls of the items. 
-Or just use phpmyadmin
-Create a web page to manage the database
-Come back here and create new tasks

CURRENT PROBLEMS AS OF 2017/05/16 - SOLVED
When the user is not logged in, it doesn't matter which "table" it is, the xhttp.php
function invokes the _search_all_db() function
    Solution:   Check the table name
                Make sure non logged in users can't run the function


FUTURE FUNCTIONALITY
--Forgotten password reset system
--PHPmyAdmin-like page to manage catalogue
--Image processing script for uploaded images
--Make the "Category" drop downs dynamically generated in the html
--Allow users to upload real pictures for their items.
--
CATALOGUE MANAGER FUNCTIONS//BASICALLY THE ITEMS TABLE ONLY
-Add/remove items
-Procedure
--Display all items in "Items"
--Each item with option for edit & remove
--New option to add an item
--During adding, ask for
----Item name
----Other names
----Category. Use this to decide the code
----Description
----Upload an image. //Behind the scenes, generate an imageURI
-Write JavaScript to check the image before uploading. Saves the user data and time.
-Allow user to define size of item boxes to as far as tables. Dynamic display type

PICKUP FROM
--write a new "displaymodal()" function for the inventory items with its own modal.
 Currently it looks like the add-to-repository modal.














